services:
  frontend:
    container_name: frontend_service
    build:
      context: ./frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

  backend:
    container_name: backend_service
    build:
      context: ./backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    env_file:
      - ./.env
    environment:
      DATABASE_URL: mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db/${MYSQL_DATABASE}
      REDIS_URL: redis://${REDIS_HOST}:6379/0
      TRANSFORMERS_CACHE: /app/instance/hf_cache
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
      - ./backend/instance:/app/instance

  db:
    image: mysql:8.0
    container_name: db_service
    restart: unless-stopped
    env_file:
      - ./.env
    ports:
      - "3306:3306"
    volumes:
      - ./backend/db:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:6-alpine
    container_name: redis_service
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight_gui
    ports:
      - "5540:5540"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - redisinsight_data:/data
    restart: unless-stopped

  # FAISS auto rebuild job
  search_indexing_job:
    build:
      context: ./backend
    container_name: search_indexing_job
    command: ["python", "-m", "jobs.auto_rebuild_search"]
    env_file:
      - ./.env
    environment:
      DATABASE_URL: mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db/${MYSQL_DATABASE}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./backend/instance:/app/instance
    restart: "no"

  # Recommender training job
  recommender_job:
    build:
      context: ./backend
    container_name: recommender_job
    command: ["python", "-m", "jobs.run_training"]
    env_file:
      - ./.env
    environment:
      DATABASE_URL: mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db/${MYSQL_DATABASE}
      REDIS_URL: redis://${REDIS_HOST}:6379/0
    depends_on:
      search_indexing_job:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./backend/instance:/app/instance
    restart: "no"

volumes:
  mysql_data:
  redis_data:
  redisinsight_data:
